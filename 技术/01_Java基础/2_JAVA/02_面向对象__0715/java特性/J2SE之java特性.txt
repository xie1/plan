J2SE之java特性

封装

1、封装是指隐藏对象的属性和细节，但对外提供公共的访问方式

2、方法

 1、方法重载（方法名称相同，参数项不相同，重载只跟参数有关，与返回类型无关）

2、构造方法重载

3、this关键字（代表对象，this就是所在函数的所属对象的引用）

a、当成员变量和局部变量重名，可以用关键字this来区分。

b、this也可以用于在构造函数中调用其它构造函数。（this只能定义在构造函数的第一行，因为初始化动作必须要先执行）

 继承

1、继承可以被定义为一个对象获取另一个对象属性的过程

2、方法

 1、方法覆写

（1）子类的方法的名称、参数签名和返回类型必须与父类的方法的名称、参数签名和返回类型一致

（2）子类方法不能缩小父类的访问权限。

（3）子类方法不能抛出比父类更多的异常

（4）方法覆盖只存在于子类和父类（包括直接父类和间接父类）之间

（5）父类的静态方法不能被子类覆盖为非静态方法。

（6）子类可以定义与父类的静态方法同名的静态方法，以便在子类中隐藏父类的静态方法

（7）父类的非静态方法不能被子类覆盖为静态方法

（8）父类的私有方法不能被子类覆盖。

（9）父类的抽象方法可以被子类通过两种途径覆盖：一是子类实现父类的抽象方法；二是子类重新声明父类的抽象方法（例如，扩大访问权限）

（10）父类的非抽象方法可以被覆盖为抽象方法

3、super关键字

访问成员变量：super.成员变量

访问构造方法：super（……）

访问成员方法：super.成员方法()

 多态

1、多态性是指对象能够有多种形态。在 OOP 中最常用的多态性发生在当父类引用指向孩子类对象时

2、转型

向上类型转换（upcast）

比如说将Cat类型转换为Animal类型，即将子类型转换为父类型

向下类型转换（downcast）

比如将Animal类型转换为Cat类型

 抽象

1、抽象类

有抽象方法的类就叫抽象类

 2、抽象方法

在类中没有方法体的方法，就是抽象方法

3、接口
